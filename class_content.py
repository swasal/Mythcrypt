# -*- coding: utf-8 -*-
"""class content

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MQBeZND-2rnlHyGFNlGZHwWHifi0VR29

# Data types in python

Python has 8 data types


|number | Type    | Example       |
|------ | ------- | ------------- |
|1      | `int`   | `10`          |
|2      | `float` | `3.14`        |
|3      | `str`   | `"hello"`     |
|4      | `bool`  | `True, False` |
|5      | `list`  | `[1, 2, 3]`   |
|6      | `dict`  | `{"a": 1}`    |
|7      | `tuple` | `(1, 2, 3)`   |
|8      | `set`   | `{1, 2, 3}`   |


However we wil only focus on a select few data types:
- integer or `int`
- string or `str`
- decimal numbers or `float`
- boolean or `bool`
- list of items : `list`
"""

# Example of data types:
integer = 451
string = "String"
float_data = 4.56
boolean = True or False # can also be 0 or 1

list_of_items = ["item1", "item 2", "item3"]

# a list is not limited to a single data type
list_2 = [1, "item1", False, "apple", 3.41]

"""## Data modifiers

Sometimes we may have a `float` `4.52` that we need to convert to an `integer` or maybe a number `265` as a string. To achieve this we use an in-built python function that are type conversion function

### Example of type conversion functions
"""

# int() conversion examples
str_number = "123"
int_from_str = int(str_number)
print(int_from_str)             # 123
print(type(int_from_str))       # <class 'int'>

float_number = 99.99
int_from_float = int(float_number)
print(int_from_float)           # 99
print(type(int_from_float))     # <class 'int'>

# float() conversion examples
int_number = 10
float_from_int = float(int_number)
print(float_from_int)           # 10.0
print(type(float_from_int))     # <class 'float'>

str_float = "45.67"
float_from_str = float(str_float)
print(float_from_str)           # 45.67
print(type(float_from_str))     # <class 'float'>

# str() conversion examples
int_val = 50
str_from_int = str(int_val)
print(str_from_int)             # "50"
print(type(str_from_int))       # <class 'str'>

float_val = 3.1416
str_from_float = str(float_val)
print(str_from_float)           # "3.1416"
print(type(str_from_float))     # <class 'str'>

bool_val = True
str_from_bool = str(bool_val)
print(str_from_bool)            # "True"
print(type(str_from_bool))      # <class 'str'>

# bool() conversion examples
zero = 0
bool_from_zero = bool(zero)
print(bool_from_zero)           # False
print(type(bool_from_zero))     # <class 'bool'>

non_zero = 42
bool_from_int = bool(non_zero)
print(bool_from_int)            # True
print(type(bool_from_int))      # <class 'bool'>

empty_str = ""
bool_from_empty_str = bool(empty_str)
print(bool_from_empty_str)      # False
print(type(bool_from_empty_str))# <class 'bool'>

non_empty_str = "Python"
bool_from_str = bool(non_empty_str)
print(bool_from_str)            # True
print(type(bool_from_str))      # <class 'bool'>

"""## String data manupulation"""

# Basic String Declaration and length determination
greeting = "Hello, World!"
print(greeting)

message = "Welcome"
print(len(greeting))  # Output: 13
print(len(message))  # Output: 7

# Ordinal / Character Conversion

print(ord('A'))   # Converts char to ASCII → 65
print(chr(65))    # Converts ASCII to char → 'A'

# String case methods

text = "python is FUN"

print(text.lower())      # Converts all characters to lowercase → "python is fun"
print(text.upper())      # Converts all characters to uppercase → "PYTHON IS FUN"
print(text.capitalize()) # Capitalizes the first letter → "Python is fun"
print(text.title())      # Capitalizes first letter of every word → "Python Is Fun"
print(text.swapcase())   # Swaps case → "PYTHON IS fun"

# String slicing and indexing

name = "Batman"

print(name[0])       # First character → 'O'
print(name[-1])      # Last character → 'I'
print(name[1:4])     # Characters from index 1 to 3 → 'pen'
print(name[:4])      # From start to index 3 → 'Open'
print(name[2:])      # From index 2 to end → 'enAI'

# String Concatenation

first = "Hello"
second = "World"
combined = first + " " + second
print(combined)  # Output: "Hello World"

# Replacing substrings

msg = "I like apples"
new_msg = msg.replace("apples", "bananas")
print(new_msg)  # Output: "I like bananas"

# Content flagger methods

print("123".isdigit())    # True – all digits
print("abc".isalpha())    # True – all letters
print("abc123".isalnum()) # True – letters and digits
print("   ".isspace())    # True – only spaces
print("Hello".isupper())  # False

# String formatting

name = "Alice"
age = 25

# f-string (modern)
print(f"My name is {name} and I am {age} years old.")

# format() method (older)
print("My name is {} and I am {} years old.".format(name, age))